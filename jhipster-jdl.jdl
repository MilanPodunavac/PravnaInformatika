
application {
  config {
    baseName pravnaInformatika
    applicationType monolith
    packageName pravna.com.myapp
    authenticationType session
    databaseType mongodb
    devDatabaseType h2Disk
    clientFramework react
    serverPort 8081
    languages [en, sr]
  }
  entities *
}

entity Presuda {
    datum LocalDate required
    datumPritvora LocalDate
    kod String required
    tip TipPresude required
    broj Integer
    godina Integer
    pokusaj Boolean
    krivica Boolean
    nacin TipUbistva
}

entity Osoba {
	ime String required
	pol Pol required
}

entity Sud {
    naziv String required
    tip TipSuda required
    mesto String required
}

entity Optuznica {
    kod String required
    datum LocalDate required
    ustanova String
}

entity Optuzeni {
	ime String required
    jmbg String unique pattern(/^[0-9]{13}/)
    imeOca String
    imeMajke String
    pol Pol required
    datumRodjenja LocalDate
    mestoRodjenja String
    drzavaRodjenja String
    prebivaliste String
    drzavljanstvo String
    bracniStatus BracniStatus
    brojDece Integer
    brojMaloletneDece Integer
    imovinskoStanje ImovinskoStanje
    obrazovanje TipObrazovanja
    zaposlenje String
    mestoZaposlenja String
}

entity RadnjaPresude {
	vremeRadnje LocalDate required
    mestoRadnje String required
    mestoSmrti String
    vremeSmrti LocalDate
}

entity Povreda {
	oruzje String required
    deoTela String required
    povrede String required
}

entity Kazna {
	tip TipKazne required
    duzinaPritvora Integer
    uracunavanjePritvora Boolean
    kolicinaNovca Integer
    primalacNovca String
    nazivImovine String
}

entity Zakon {
	naziv String required
}

entity ClanZakona {
	broj Integer required
    glava Integer required
    naziv String required
    tekst String
}

relationship OneToMany {
	Zakon{clanovi(clanovi)} to ClanZakona{zakon required}
    
    Optuzeni{presudeOptuzeni(presudeOptuzeni)} to Presuda{optuzeni}
    Osoba{presudeSudija(presudeSudija)} to Presuda{sudija}
    Osoba{presudeZapisnicar(presudeZapisnicar)} to Presuda{zapisnicar}
    Osoba{presudeTuzilac(presudeTuzilac)} to Presuda{tuzilac}
    Osoba{presudeBranilac(presudeBranilac)} to Presuda{branilac}
    Osoba{presudeOsteceni(presudeOsteceni)} to Presuda{osteceni}

    Sud{presudeSud(presudeSud)} to Presuda{sud}
    
    Presuda{kazne(kazne)} to @OnDelete("SET NULL") @OnUpdate("CASCADE") Kazna
    
    RadnjaPresude{povrede(povrede)} to Povreda{radnja required}
}

relationship OneToOne {
	Presuda{radnja required} to RadnjaPresude{presuda}
	Presuda{optuznica required} to Optuznica{presuda}
}


enum TipPresude {
	PRVOSTEPENI_KRIVICNI_PREDMET ("K - Prvostepeni krivični predmet"),
    SPECIJALNI_KRIVICNI_PREDMET ("K-S - Specijalni krivični predmet"),
    PREDMET_SUDIJE_ZA_ISTRAGU ("Ki - Predmet sudije za istragu"),
    SPECIJALNI_ISTRAZNI_PREDMET ("Ki-S - Specijalni istražni predmet"),
    PRIPREMNI_POSTUPAK_PREMA_MALOLETNICIMA ("Kim - Pripremni postupak prema maloletnicima"),
    KRIVICNI_POSTUPAK_PREMA_MALOLETNICIMA ("Km - Krivični postupak prema maloletnicima"),
    PREDMETI_POMILOVANJA ("Kp - Predmeti pomilovanja"),
    RAZNA_KRIVICNA_STVAR ("Kr - Razna krivična stvar"), 
    KRIVICNI_SPECIJALNI ("Kr-S - Krivični specijalni"),
    ISTRAZNA_RADNJA ("Kri - Istražna radnja"),
    DISCIPLINSKA_ZALBA ("Dž - Disciplinarska žalba"),
    ZASTITA_ZAKONITOSTI_U_PARNICNOM_POSTUPKU ("Gzz - Zaštita zakonitosti u parničnom postupku"),
    DRUGOSTEPENSKI_GRADJANSKI_PREDMET ("Gž - Drugostepeni građanski predmet"),
    PREDMET_IZVRSENJA ("I - Predmet izvršenja"),
    PREDMET_O_IZVRSENJU_PREKRSAJNIH_SANKCIJA ("IPS - Predmet o izvršenju prekršajnih sankcija i postupaka"),
    IZVRSENJE_PO_VERODOSTOJNOJ_ISPRAVI ("IV - Izvršenje po verodostojnoj ispravi"),
    KONTROLNI_ZAHTEV ("IV-Su-2 - Kontrolni zahtev"),
    IZUZECE ("IV-Su-3 - Izuzeće"),
    IZVRSENJE_KRIVICNIH_SANKCIJA ("Iks - Izvršenje krivičnih sankcija")
}

enum TipUbistva {
	SA_PREDUMISLJANJEM ("Ubistvo sa predumišljajem"),
    BEZ_PREDUMISLJAJA ("Ubistvo bez predumišljaja"),
    IZ_NEHATA ("Ubistvo iz nehata"),
    NAKON_PORODJAJA ("Ubistvo nakon porođaja"),
    IZ_SAMILOSTI ("Ubistvo iz samilosti")
}

enum Pol {
	MUSKI ("Muški"),
    ZENSKI ("Ženski")
}

enum BracniStatus {
	VAN_BRAKA ("Neoženjen/Neudata"),
    U_BRAKU ("Oženjen/Udata"),
    PREKINUT_BRAK ("Razveden/Razvedena"),
    SMRT_U_BRAKU ("Udovac/Udovica")
}

enum ImovinskoStanje {
	LOSE ("Loše"),
    SREDNJE ("Srednje"),
    DOBRO ("Dobro")
}

enum TipObrazovanja {
	NEOBRAZOVAN ("Neobrazovan"),
    OSNOVNA_SKOLA ("Osnovna škola"),
    SREDNJA_SKOLA ("Srednja škola"),
    VISOKA_SKOLA ("Visoka škola"),
    FAKULTET ("Fakultet")
}

enum TipKazne {
	ZATVORSKA_KAZNA ("Zatvorska kazna"),
    USLOVNA_KAZNA ("Uslovna kazna"),
    NOVCANA_KAZNA ("Novčana kazna"),
    IMOVINSKA_KAZNA ("Imovinska kazna")
}

enum TipSuda {
	OSNOVNI ("Osnovni"),
    VISI ("Viši"),
    APELACIONI ("Apelacioni"),
    VRHOVNI ("Vrhovni")
}

paginate Zakon, ClanZakona, Presuda with infinite-scroll
paginate Osoba, Optuzeni with pagination

service Zakon, ClanZakona, Presuda with serviceImpl
service Osoba, Optuzeni, RadnjaPresude, Kazna, Povreda, Sud with serviceClass

dto all with mapstruct